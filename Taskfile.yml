version: "3"

vars: 
  QT_VERSION: "6.6.1"
  QT_DIR: "qt"
  CMAKE_CMD: qt-cmake
  QT_CMAKE: "{{.QT_DIR}}/{{.QT_VERSION}}/{{.QT_SUBDIR}}/bin/qt-cmake"

includes:
  build: ./{{OS}}/Taskfile.yml

tasks:
  clean:
    cmds:
      - echo "Cleaning"
      - cmd: rm -rf build || true
        platforms: [darwin, linux]
      - cmd: powershell.exe rm -r -force build || true
        platforms: [windows]
      - cmd: rm deploy/* || true
        platforms: [darwin, linux]
      - cmd: powershell.exe rm -r -force deploy/* || true
        platforms: [windows]
      - cmd: rm -rf vcpkg
        platforms: [darwin, linux]
      - cmd: powershell.exe rm -r -force vcpkg || true
        platforms: [windows]
  vcpkg:
    cmds:
      - echo "Installing vcpkg"
      - git clone https://github.com/microsoft/vcpkg.git
      - cmd: ./vcpkg/bootstrap-vcpkg.sh
        platforms: [darwin, linux]
      - cmd: powershell.exe ./vcpkg/bootstrap-vcpkg.bat
        platforms: [windows]
  install-cmake-ubuntu:
    platforms: [linux]
    cmds:
      - echo "Installing cmake"
      - sudo apt-get update
      - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
      - sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ jammy main' -y
      - sudo apt-get update
      - sudo apt-get install -y cmake
  install-linuxdeploy:
    platforms: [linux]
    cmds:
      - echo "Installing linuxdeploy"
      - wget https://github.com/linuxdeploy/linuxdeploy/releases/download/1-alpha-20231206-1/linuxdeploy-x86_64.AppImage
      - wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
      - sed 's|AI\x02|\x00\x00\x00|g' -i linuxdeploy-x86_64.AppImage
      - sed 's|AI\x02|\x00\x00\x00|g' -i linuxdeploy-plugin-qt-x86_64.AppImage
      - chmod +x linuxdeploy-x86_64.AppImage
      - chmod +x linuxdeploy-plugin-qt-x86_64.AppImage
  install-deps:
      cmds:
        - echo "Installing dependencies"
        - cmd: brew install git cmake ninja python3
          platforms: [darwin]
        - cmd: choco install -y git cmake ninja python3 
          platforms: [windows]
        - cmd: sudo apt-get update && sudo apt-get install -y build-essential cmake ninja-build python3-pip
          platforms: [linux]
        - cmd: python3 -m pip install aqtinstall
          platforms: [darwin, linux]
        - cmd: py -m pip install aqtinstall
          platforms: [windows]
        - task: install-cmake-ubuntu
          platforms: [linux]
        - task: install-linuxdeploy
          platforms: [linux]
  install-qt:
    cmds:
      - echo "Installing Qt"
      - cmd: python3 -m aqt install-qt mac desktop {{.QT_VERSION}} clang_64 -O {{.QT_DIR}}
        platforms: [darwin]
      - cmd: py -m aqt install-qt windows desktop {{.QT_VERSION}} win64_mingw -O {{.QT_DIR}}
        platforms: [windows]
      - cmd: python3 -m aqt install-qt linux desktop {{.QT_VERSION}} gcc_64 -O {{.QT_DIR}}
        platforms: [linux]
  configure:
    cmds:
      - echo "Configuring"
      - "{{.QT_CMAKE_PREFIX}}{{.QT_DIR}}/{{.QT_VERSION}}/{{.QT_SUBDIR}}/bin/{{.CMAKE_CMD}} -B build -G Ninja -D CMAKE_INSTALL_PREFIX=build/deploy -D VCPKG_TARGET_TRIPLET={{.VCPKG_TARGET_TRIPLET}} -D VCPKG_HOST_TRIPLET={{.VCPKG_HOST_TRIPLET}} -D X_VCPKG_APPLOCAL_DEPS_INSTALL=ON"
  debug:
    cmds:
      - echo "Debugging"
      - "{{.QT_CMAKE_PREFIX}}{{.QT_DIR}}/{{.QT_VERSION}}/{{.QT_SUBDIR}}/bin/{{.CMAKE_CMD}} -B build -G Ninja -D CMAKE_INSTALL_PREFIX=build/deploy -D VCPKG_TARGET_TRIPLET={{.VCPKG_TARGET_TRIPLET}} -D VCPKG_HOST_TRIPLET={{.VCPKG_HOST_TRIPLET}} -D X_VCPKG_APPLOCAL_DEPS_INSTALL=ON -D WIN_DEBUG=1"
      - "cmake --build build --target install"
  install:
    cmds:
      - echo "Installing"
      - cmd: cmake --build build --config Release --target install
        platforms: [windows, darwin]
      - cmd: cmake --build build
        platforms: [linux]
  deploy-appimage:
    platforms: [linux]
    cmds:
      - echo "Deploying AppImage"
      - export QML_SOURCES_PATHS=$(pwd)/build 
      - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/{{.QT_DIR}}/{{.QT_VERSION}}/{{.QT_SUBDIR}}/lib
      - export QMAKE=$(pwd)/{{.QT_DIR}}/{{.QT_VERSION}}/{{.QT_SUBDIR}}/bin/qmake
      - ./linuxdeploy-x86_64.AppImage --plugin qt -e ./build/kae --appdir ./build -d ./linux/kae.desktop -i ./linux/kae.png --output appimage
      - mkdir -p ./deploy
      - mv kae*.AppImage ./deploy
  package:
    cmds:
      - echo "Packaging"
      - cmd: cmake --build build --config Release --target package
        platforms: [windows, darwin]
      - task: deploy-appimage
        platforms: [linux]
  build-and-deploy:
    cmds:
      - echo "Building and deploying"
      - task: clean
      - task: vcpkg
      - task: install-deps
      - task: install-qt
      - task: configure
      - task: install
      - task: package